apply plugin: 'com.android.application'
// atlas配置 begin
def apVersion = getEnvValue("apVersion", "");
apply plugin: 'com.taobao.atlas'
// atlas配置 end

android {
    compileSdkVersion 26
    buildToolsVersion "27.0.3"
    signingConfigs {
        release {
            storeFile file("../template.jks")
            storePassword 'pine123'
            keyAlias 'AppTemplate'
            keyPassword 'pine123'
        }
    }
    defaultConfig {
        applicationId build_versions.application_id
        minSdkVersion 21
        targetSdkVersion 26
        versionCode build_versions.version_code
        versionName build_versions.version_name

        manifestPlaceholders = [app_name: build_versions.app_name]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled = true
    }

    /**
     * 不要使用多渠道和自定buildType方式，因为atlas对这块支持不完善
     *
     * 插件	                  productFlavors	      自定义buildType
     * google插件	              支持	                支持
     * atlasplugin 构建apk	      支持	               不支持
     * atlasplugin 构建动态部署	 不支持	               不支持
     **/
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            debuggable false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {

        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                // 显示app名称+当前版本号
                def fileName = "${build_versions.apk_head_name}-V${variant.versionName}"
//                // 加入打包时间
//                fileName = fileName + "-${releaseTime()}"
                // 如果是debug版本，加入beta版本号
                if ('debug'.equals(variant.buildType.name)) {
                    fileName = fileName + "-beta.apk"
                } else {
                    // 如果是release版本，直接显示
                    fileName = fileName + "-release.apk"
                }
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}

//// 显示的时间格式，形如20171110
//def releaseTime() {
//    return new Date().format("yyyyMMdd", TimeZone.getDefault());
//}

// atlas配置 begin
atlas {
    atlasEnabled true

    manifestOptions {
        removeCustomPermission false
    }

    buildTypes {
        debug {
            baseApFile project.rootProject.file('../app/build/outputs/apk/app-debug.ap')
        }
    }
}
// atlas配置 end

// 获取执行gradle命令时的运行参数
String getEnvValue(key, defValue) {
    def val = System.getProperty(key);
    if (null != val) {
        return val;
    }
    val = System.getenv(key);
    if (null != val) {
        return val;
    }
    return defValue;
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'

    // 主体基础模块 begin
    compile project(':base')
    compile project(':app-welcome')
    // 主体基础模块 end

    // atlas配置 begin
    compile('com.taobao.android:atlas_core:5.0.8.0-rc7@aar') {
        transitive = true
    }
    // bundle模块 begin
    bundleCompile project(':bundle-login')

    bundleCompile project(':bundle-main')
    bundleCompile project(':bundle-user')

    bundleCompile project(':bundle-businessa')
    bundleCompile project(':bundle-businessb')
    // bundle模块 end
    // atlas配置 end
}

apply plugin: 'maven'
apply plugin: 'maven-publish'

publishing {
    repositories {
        mavenLocal()
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact "${project.buildDir}/outputs/apk/${project.name}-debug.ap"
            artifactId "AP-debug"
        }
    }
}