apply plugin: 'com.android.application'
// atlas配置 begin
version = getEnvValue("versionName", "1.0.1");
def apVersion = getEnvValue("apVersion", "");
apply plugin: 'com.taobao.atlas'
// atlas配置 end

android {
    compileSdkVersion 26
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "com.pine.template"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName version
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

// atlas配置 begin
atlas {
    atlasEnabled true

    buildTypes {
        debug {
            baseApFile project.rootProject.file('../app/build/outputs/apk/app-debug.ap')
        }
    }
}
// atlas配置 end

// 获取执行gradle命令时的运行参数
String getEnvValue(key, defValue) {
    def val = System.getProperty(key);
    if (null != val) {
        return val;
    }
    val = System.getenv(key);
    if (null != val) {
        return val;
    }
    return defValue;
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'

    // 主体基础模块 begin
    compile project(':base')
    compile project(':app-welcome')
    // 主体基础模块 end

    // atlas配置 begin
    compile('com.taobao.android:atlas_core:5.0.8.0-rc7@aar') {
        transitive = true
    }
    // bundle模块 begin
    bundleCompile project(':bundle-login')

    bundleCompile project(':bundle-main')
    bundleCompile project(':bundle-user')

    bundleCompile project(':bundle-businessa')
    bundleCompile project(':bundle-businessb')
    // bundle模块 end
    // atlas配置 end
}

apply plugin: 'maven'
apply plugin: 'maven-publish'

publishing {
    repositories {
        mavenLocal()
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact "${project.buildDir}/outputs/apk/${project.name}-debug.ap"
            artifactId "AP-debug"
        }
    }
}